From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jocelyn Turcotte <jocelyn.turcotte@digia.com>
Date: Tue, 18 Feb 2014 14:49:48 +0100
Subject: Update clipboard.h to allow building clipboard_qt.cpp on all
 platforms

Change-Id: Ife754b2fcb1c1a535565facdbab615c07b8c4935
Reviewed-by: Simon Hausmann <simon.hausmann@digia.com>
---
 ui/base/clipboard/clipboard.h | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/ui/base/clipboard/clipboard.h b/ui/base/clipboard/clipboard.h
index f41ac7a..5cf936c 100644
--- a/ui/base/clipboard/clipboard.h
+++ b/ui/base/clipboard/clipboard.h
@@ -88,6 +88,7 @@ class UI_EXPORT Clipboard : NON_EXPORTED_BASE(public base::ThreadChecker) {
     bool operator<(const FormatType& other) const;
 #endif
 
+#if !defined(TOOLKIT_QT)
 #if defined(OS_WIN)
     const FORMATETC& ToFormatEtc() const { return data_; }
 #elif defined(OS_MACOSX)
@@ -97,6 +98,9 @@ class UI_EXPORT Clipboard : NON_EXPORTED_BASE(public base::ThreadChecker) {
 #elif defined(USE_AURA)
     const std::string& ToString() const { return data_; }
 #endif
+#else
+    const std::string& ToString() const { return data_; }
+#endif // !defined(TOOLKIT_QT)
 
    private:
     friend class Clipboard;
@@ -111,7 +115,10 @@ class UI_EXPORT Clipboard : NON_EXPORTED_BASE(public base::ThreadChecker) {
     //
     // Note that in some cases, the accessor for the wrapped descriptor may be
     // public, as these format types can be used by drag and drop code as well.
-#if defined(OS_WIN)
+#if defined(TOOLKIT_QT)
+    explicit FormatType(const std::string& native_format);
+    std::string data_;
+#elif defined(OS_WIN)
     explicit FormatType(UINT native_format);
     FormatType(UINT native_format, LONG index);
     UINT ToUINT() const { return data_.cfFormat; }
@@ -339,7 +346,7 @@ class UI_EXPORT Clipboard : NON_EXPORTED_BASE(public base::ThreadChecker) {
   void WriteData(const FormatType& format,
                  const char* data_data,
                  size_t data_len);
-#if defined(OS_WIN)
+#if !defined(TOOLKIT_QT) && defined(OS_WIN)
   void WriteBitmapFromHandle(HBITMAP source_hbitmap,
                              const gfx::Size& size);
 
