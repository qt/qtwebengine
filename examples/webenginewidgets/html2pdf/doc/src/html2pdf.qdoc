// Copyright (C) 2017 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \example webenginewidgets/html2pdf
    \title WebEngine Widgets Html2Pdf Example
    \ingroup webengine-widgetexamples
    \brief Converts web pages to PDF documents using \QWE.

    \image html2pdf-example.png

    \e {Html2Pdf} demonstrates how to use \QWE to implement a
    command-line application for converting web pages into PDF documents.

    \include examples-run.qdocinc

    \section1 The Conversion Process

    In order to convert a web page into a PDF document we need to:

    \list 1
        \li Create a \l QWebEngineView.
        \li Tell the \l QWebEngineView to begin loading the target URL and wait for it to finish.
        \li Tell the \l QWebEngineView to begin converting the loaded page into a PDF file and again wait for it to finish.
        \li Once the conversion is finished, exit the program.
    \endlist

    This process is encapsulated in the \e {Html2PdfConverter} class:

    \quotefromfile webenginewidgets/html2pdf/html2pdf.cpp
    \skipto #include
    \printuntil Html2PdfConverter
    \printuntil /^\};/

    In the constructor we create the \l QWebEngineView and connect to its \l
    QWebEngineView::loadFinished and \l QWebEngineView::pdfPrintingFinished
    signals:

    \skipto Html2PdfConverter::Html2PdfConverter
    \printuntil /^\}/

    The \c run() method will trigger the conversion process by asking \l
    QWebEnginePage to start loading the target URL. We then enter the main event
    loop:

    \skipto Html2PdfConverter::run
    \printuntil /^\}/

    After the loading is finished we begin PDF generation. We ask the \l
    QWebEnginePage::printToPdf method to write the output directly to disk:

    \skipto Html2PdfConverter::loadFinished
    \printuntil /^\}/

    Once we receive the signal that the PDF conversion has finished, all that
    remains is to report potential errors and exit the program:

    \skipto Html2PdfConverter::pdfPrintingFinished
    \printuntil /^\}/

    \section1 The Main Function

    Our \c main function is responsible for setting up a \l QApplication and
    parsing command line arguments:

    \skipto int main
    \printuntil /^\}/

    Note that to use \QWE Widgets we need to create a \l QApplication
    and not a \l QCoreApplication, even though this is a command line
    application.
*/
