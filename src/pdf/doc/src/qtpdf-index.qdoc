// Copyright (C) 2019 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \page qtpdf-index.html
    \title Qt PDF

    \brief Renders pages from PDF documents.

    The Qt PDF module contains classes and functions for rendering
    PDF documents. The \l QPdfDocument class loads a PDF document
    and renders pages from it according to the options provided by
    the \l QPdfDocumentRenderOptions class. The \l QPdfPageRenderer
    class manages a queue that collects all render requests. The
    \l QPdfPageNavigator class handles the navigation through a
    PDF document. The \l QPdfSearchModel class searches for a string
    and holds the search results. The QPdfBookmarkModel class holds the
    table of contents, if present. The QPdfLinkModel holds information
    about hyperlinks on a page. The \l QPdfView widget is a complete
    PDF viewer, and the \l {PDF Viewer Example} shows how to use it.

    For Qt Quick applications, three kinds of full-featured viewer
    components are provided. \l PdfMultiPageView should be your
    first choice for the most common user experience: flicking
    through the pages in the entire document.
    \l PdfScrollablePageView shows one page at a time, with scrolling;
    and \l PdfPageView shows one full page at a time, without scrolling.

    The full-featured viewer components are composed of lower-level
    QML components that can be used separately if you need to write a
    more customized PDF viewing application: \l PdfDocument,
    \l PdfPageImage, \l PdfPageNavigator, \l PdfSelection,
    \l PdfSearchModel, \l PdfLinkModel, and \l PdfBookmarkModel.

    If you only need to render page images, without features such as
    text selection, search and navigation, this module includes a
    \l QImageIOHandler plugin that treats PDF as a scalable
    \l {Qt Image Formats}{image format}, similar to \l {Qt SVG}{SVG}.
    You can simply use \l Image, and set the
    \l {Image::currentFrame}{currentFrame} property to the page index
    that you wish to display. If the PDF file does not render its own
    background, the image has a transparent background.

    \include module-use.qdocinc using qt module
    \quotefile qtpdf-build.cmake

    See also the \l{Build with CMake} overview.

    \section2 Building with qmake

    To link against the module, add this line to your qmake project file:

    \snippet qtpdf_build_snippet.qdoc 0

    \section1 Examples

    \list
        \li \l{Qt PDF Examples}
    \endlist

    \section1 API Reference

    \list
        \li \l{Qt PDF C++ Classes}
        \li \l{Qt Quick PDF QML Types}
    \endlist
*/
