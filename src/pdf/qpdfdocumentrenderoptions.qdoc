// Copyright (C) 2017 Klarälvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Tobias König <tobias.koenig@kdab.com>
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR LGPL-3.0-only OR GPL-2.0-only OR GPL-3.0-only

#include "qpdfdocumentrenderoptions.h"

QT_BEGIN_NAMESPACE

/*!
    \class QPdfDocumentRenderOptions
    \since 5.10
    \inmodule QtPdf

    \brief The QPdfDocumentRenderOptions class holds the options to render a page from a PDF document.

    \sa QPdfDocument
*/

/*!
    \enum QPdfDocumentRenderOptions::Rotation

    This enum describes the rotation of the page for rendering.

    \value None Do not rotate (the default)
    \value Clockwise90 Rotate 90 degrees clockwise
    \value Clockwise180 Rotate 180 degrees
    \value Clockwise270 Rotate 270 degrees clockwise

    \sa QPdfDocument::render()
*/
/*!
    \enum QPdfDocumentRenderOptions::RenderFlag

    This enum is used to describe how a page should be rendered.

    \value None The default value, representing no flags.
    \value Annotations The page is rendered with annotations.
    \value OptimizedForLcd The text of the page is rendered optimized for LCD display.
    \value Grayscale The page is rendered grayscale.
    \value ForceHalftone Always use halftones for rendering if the output image is stretched.
    \value TextAliased Anti-aliasing is disabled for rendering text.
    \value ImageAliased Anti-aliasing is disabled for rendering images.
    \value PathAliased Anti-aliasing is disabled for rendering paths.

    \sa QPdfDocument::render()
*/

/*!
    \fn QPdfDocumentRenderOptions::QPdfDocumentRenderOptions()

    Constructs a QPdfDocumentRenderOptions object.
*/

/*!
    \fn  QPdfDocumentRenderOptions::Rotation QPdfDocumentRenderOptions::rotation() const

    Returns the rotation used for rendering a page from a PDF document.

    \sa setRotation()
*/

/*!
    \fn void QPdfDocumentRenderOptions::setRotation(QPdfDocumentRenderOptions::Rotation rotation)

    Sets the \a rotation used for rendering a page from a PDF document.

    \sa rotation()
*/

/*!
    \fn QPdfDocumentRenderOptions::RenderFlags QPdfDocumentRenderOptions::renderFlags() const

    Returns the special flags used for rendering a page from a PDF document.

    \sa setRenderFlags()
*/

/*!
    \fn void QPdfDocumentRenderOptions::setRenderFlags(QPdfDocumentRenderOptions::RenderFlags flags)

    Sets the special \a flags used for rendering a page from a PDF document.

    \sa renderFlags()
*/

/*!
    \fn QRect QPdfDocumentRenderOptions::scaledClipRect() const

    Returns the rectangular region to be clipped from the page after having
    been scaled to \l scaledSize().

    \sa setScaledClipRect()
*/

/*!
    \fn void QPdfDocumentRenderOptions::setScaledClipRect(const QRect &r)

    Sets the rectangle region (\a r) to be clipped from the page after having
    been scaled to \l scaledSize().

    \sa scaledClipRect()
*/

/*!
    \fn QRect QPdfDocumentRenderOptions::scaledSize() const

    Returns the size of the page to be rendered, in pixels.

    \sa setScaledSize()
*/

/*!
    \fn void QPdfDocumentRenderOptions::setScaledSize(const QSize &s)

    Sets the size (\a s) of the page to be rendered, in pixels.

    \sa scaledSize()
*/

/*!
    \fn bool operator!=(QPdfDocumentRenderOptions lhs, QPdfDocumentRenderOptions rhs)
    \relates QPdfDocumentRenderOptions

    Returns \c true if the options \a lhs and \a rhs are different, otherwise
    returns \c false.
*/

/*!
    \fn bool operator==(QPdfDocumentRenderOptions lhs, QPdfDocumentRenderOptions rhs)
    \relates QPdfDocumentRenderOptions

    Returns \c true if the options \a lhs and \a rhs are equal,
    otherwise returns \c false.
*/

QT_END_NAMESPACE
