// Copyright (C) 2021 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
\page qt-add-webengine-dictionary.html
\ingroup cmake-commands-qtwebenginecore

\title qt_add_webengine_dictionary
\keyword qt6_add_webengine_dictionary

\brief Converts the hunspell dictionary format into \e bdict binary format.

\cmakecommandsince 6.3

\section1 Synopsis

\badcode
qt_add_webengine_dictionary(
    [TARGET]
    [SOURCE]
    [OUTPUT_DIRECTORY]
)

\endcode

\versionlessCMakeCommandsNote qt6_webengine_add_dictionary()

\section1 Description

    A spell checker in Qt Web Engine needs dictionaries in a specific binary format.
    This CMake command converts dictionaries from the \l{Hunspell project}. into the \c bdict
    binary format. It creates a \c qtwebengine_dictionaries target, which your project can
    use as a dependency. This way your project can easily add dictionaries for the spell
    checker. Refer to the \l{WebEngine Widgets Spellchecker Example}{spell checker example}
    for more details.

\section1 Arguments

    \c TARGET is an optinal argument and specifies the name of the application target that should
    depend on \c qtwebengine_dictionaries target. In other words it is used to define a build
    dependency to create the binary format of dictionaries before building \c TARGET.

    \c SOURCE is the absolute path to the \l{Hunspell project} dictionary for which
    a corresponding binary format (\c.bdict) will be created.

    \c OUTPUT_DIRECTORY is an optional argument and specifies the directory where the binary format
    of the dictionary will be created. If not specified, \c CMAKE_CURRENT_BINARY_DIR will be used
    as \c OUTPUT_DIRECTORY.

    \note The \c qtwebengine_dictionaries directory or \c <CONFIG>/qtwebengine_dictionaries
    directories in the case of the multi-config generator is appended to OUTPUT_DIRECTORY. This
    helps to utilize dictionaries, as the \c webengine_dictionaries directory is the default
    search location.
*/
