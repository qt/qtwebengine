// Copyright (C) 2024 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \qmltype webEnginePermission
    \instantiates QWebEnginePermission
    \inqmlmodule QtWebEngine
    \brief An object used to access and modify the state of a single permission that's been
    granted or denied to a specific origin URL.

    The typical usage pattern is as follows:
    \list 1
        \li A website requests a specific feature, triggering the WebEngineView::permissionRequested signal;
        \li The signal handler triggers a prompt asking the user whether they want to grant the permission;
        \li When the user has made their decision, the application calls \l grant() or \l deny();
    \endlist

    Alternatively, an application interested in modifying already granted permissions may use WebEngineProfile::listPermissions()
    to get a list of existing permissions associated with a profile, or WebEngineProfile::getPermission() to get
    a webEnginePermission object for a specific permission.

    The \l origin property can be used to query which origin the webEnginePermission is associated with, while the
    \l feature property describes the associated feature. A website origin is the combination of its scheme, hostname,
    and port. Permissions are granted on a per-origin basis; thus, if the web page \c{https://www.example.com:12345/some/page.html}
    requests a permission, it will be granted to the origin \c{https://www.example.com:12345/}.

    The usability lifetime of a webEnginePermission is tied either to its associated WebEngineView
    (for transient feature types), or WebEngineProfile (for permanent feature types). A transient permission is one which
    needs to be explicitly granted or denied every time it's needed (e.g. webcam/screen sharing permission), whereas a permanent
    one might be stored inside the current profile, depending on the value of WebEngineProfile::persistentPermissionsPolicy.
    You can check whether a webEnginePermission is in a valid state using its \l isValid() property. For invalid objects, calls to \l grant(),
    \l deny(), or \l reset() will do nothing, and their \l state() will always be WebEnginePermission.Invalid.

    The feature types Qt WebEngine supports are described in \l feature.

    \sa WebEngineView::permissionRequested, WebEngineProfile::getPermission(),
    WebEngineProfile::listPermissions()
*/

/*!
    \qmlproperty url webEnginePermission::origin
    \brief The URL of the permission's associated origin.

    A website origin is the combination of its scheme, hostname, and port. Permissions are granted on a
    per-origin basis; thus, if the web page \c{https://www.example.com:12345/some/page.html}
    requests a permission, it will be granted to the origin \c{https://www.example.com:12345/}.
*/

/*!
    \qmlproperty enumeration webEnginePermission::feature
    \brief The feature type associated with this permission.

    \value WebEnginePermission.MediaAudioCapture Access to a microphone, or another audio source. This feature is transient.
    \value WebEnginePermission.MediaVideoCapture Access to a webcam, or another video source. This feature is transient.
    \value WebEnginePermission.MediaAudioVideoCapture Combination of \l MediaAudioCapture and \l MediaVideoCapture. This feature is transient.
    \value WebEnginePermission.DesktopVideoCapture Access to the contents of the user's screen. This feature is transient.
    \value WebEnginePermission.DesktopAudioVideoCapture Access to the contents of the user's screen, and application audio. This feature is transient.
    \value WebEnginePermission.MouseLock Locks the pointer inside an element on the web page. This feature is transient.
    \value WebEnginePermission.Notifications Allows the website to send notifications to the user.
    \value WebEnginePermission.Geolocation Access to the user's physical location.
    \value WebEnginePermission.ClipboardReadWrite Access to the user's clipboard.
    \value WebEnginePermission.LocalFontsAccess Access to the fonts installed on the user's machine. Only available on desktops.
    \value WebEnginePermission.Unsupported An unsupported feature type.

    \note Transient feature types are ones that will never be remembered by the underlying storage, and will trigger
    a permission request every time a website tries to use them.
*/

/*!
    \qmlproperty enumeration webEnginePermission::state
    \brief The current state of the permission.

    \value WebEnginePermission.Invalid Object is in an invalid state, and any attempts to modify the described permission will fail.
    \value WebEnginePermission.Ask Either the permission has not been requested before, or the feature() is transient.
    \value WebEnginePermission.Granted Permission has already been granted.
    \value WebEnginePermission.Denied Permission has already been denied.

    If a permission for the specified \l feature and \l origin has already been granted or denied,
    the return value is WebEnginePermission.Granted, or WebEnginePermission.Denied, respectively.
    When this is the first time the permission is requested, or if the \l feature is transient,
    the return value is WebEnginePermission.Ask. If the object is in an invalid state, the returned
    value is WebEnginePermission.Invalid.

    \sa isValid, isTransient
*/

/*!
    \qmlproperty bool webEnginePermission::isValid
    \brief Indicates whether attempts to change the permission's state will be successful.

    An invalid webEnginePermission is either:
    \list
        \li One whose \l feature is unsupported;
        \li One whose \l feature is transient, and the associated page/view has been destroyed;
        \li One whose \l feature is permanent, but the associated profile has been destroyed;
        \li One whose \l origin is invalid.
    \endlist

    \sa isTransient
*/

/*!
    \qmlmethod void webEnginePermission::grant()

    Allows the associated origin to access the requested feature. Does nothing when \l isValid evaluates to false.

    \sa deny, reset, isValid
*/

/*!
    \qmlmethod void webEnginePermission::deny()

    Stops the associated origin from accessing the requested feature. Does nothing when \l isValid evaluates to false.

    \sa grant, reset, isValid
*/

/*!
    \qmlmethod void webEnginePermission::reset()

    Removes the permission from the profile's underlying storage. By default, permissions are stored on disk (except for
    off-the-record profiles, where permissions are stored in memory and are destroyed with the profile).
    This means that an already granted/denied permission will not be requested twice, but will get automatically
    granted/denied every subsequent time a website requests it. Calling reset() allows the query to be asked
    again the next time the website requests it.

    Does nothing when \l isValid evaluates to false.

    \sa grant, deny, isValid, WebEngineProfile::persistentPermissionsPolicy
*/

/*!
    \qmlmethod void webEnginePermission::isTransient(WebEnginePermission.Feature feature)

    Returns whether \a feature is transient, meaning that a permission will be requested
    every time the associated functionality is used by a web page.
*/
